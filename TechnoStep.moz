@OnLoad
  ShowLayout 1
  
  // Knob constants
  knob_direction = 10
  knob_pulse = 9
  knob_offset = 19
  knob_steps = 20
  knob_controlSteps = 21 
  
  // Config knob constants
  knob_scale = 0
  knob_root = 1
  knob_relativePitch = 2
  knob_minNote = 3
  knob_maxNote = 4
  
  // Visible UI state
  if Unassigned steps
    steps = 8
  endif
  if Unassigned controlSteps
    controlSteps = 8
  endif
  // Duplicated as there is no Log2 function
  if Unassigned pulse
    pulse = 4
  endif
  if Unassigned pulseDenom
    pulseDenom = 16
  endif
  if Unassigned direction
    direction = 1
  endif
  if Unassigned offset
    offset = 0
  endif
  
  // Config state
  if Unassigned relativePitch
    relativePitch = 0
  endif
  if Unassigned rootNote
    rootNote = 0
  endif
  if Unassigned scale
    scale = 0
  endif
  if Unassigned minNote
    minNote = 0
  endif
  if Unassigned maxNote
    maxNote = 127
  endif
  
  // Sequencer internal state
  metroPulse = -1
  currentStep = -1
  currentControlStep = -1
  currentStepDelta = 1
  
  if Unassigned stepValues
    stepValues = []
    FillArray stepValues, 63, 8
  endif
  
  if Unassigned controlValues
    controlValues = []
    FillArray controlValues, 100, 8
  endif
  
  lastHostBeat = 0
  lastHostBar = 0
  
  // UI constants
  screen_main = 0
  screen_shift = 1
  screen_config = 2
  
  // UI internal state
  doubleShiftValid = False
  activeScreen = screen_main
  
  SetKnobValue knob_direction, 127
  SetKnobValue knob_pulse, 100 
  SetKnobValue knob_steps, 127
  SetKnobValue knob_controlSteps, 127  
  SetKnobValue knob_offset, 0  

  SetRootNote rootNote
  PresetScale scale
  
  // Only do this if not restoring a saved state
  if Unassigned loaded
    for i = 0 to 7
      SetKnobValue i + 11, 100
    endfor
  
    loaded = True 
  endif
  
  Call @UpdateUI
  Call @UpdateKnobs
  Call @UpdateMetronome
@End 

@OnHostStart
  // Assume we have rewound to the start, ideally this would be more robust
  if HostBar <> lastHostBar OR HostBeat <> lastHostBeat
    metroPulse = -1
  endif
  //Log {Bar }, HostBar, { }, lastHostBar, { Beat }, HostBeat, { }, lastHostBeat
@End 

@OnHostStop
  //currentStep = -1
  //Call @UpdateUI
@End 

@OnKnobChange  
  value = GetKnobValue LastKnob
  
  if activeScreen = screen_main
    if LastKnob < 8
      stepValues[LastKnob] = value
    elseif LastKnob >= 11 AND LastKnob < 19
      controlValues[LastKnob - 11] = value
    elseif LastKnob = knob_direction
      direction = Round(TranslateScale value, 0, 127, 0, 1)
      if direction = 0
        currentStepDelta = -1
      else
        currentStepDelta = 1
      endif
    elseif LastKnob = knob_offset
      offset = Round(TranslateScale value, 0, 127, 0, 7)
    elseif LastKnob = knob_pulse
      pulse = Round(TranslateScale value, 0, 127, 0, 5) 
      pulseDenom = Pow 2, pulse
  
      Call @UpdateMetronome
    elseif LastKnob = knob_steps
      steps = Round(TranslateScale value, 0, 127, 1, 8)
    elseif LastKnob = knob_controlSteps
      controlSteps = Round(TranslateScale value, 0, 127, 1, 8)
    endif
    
    Call @UpdateUI
  elseif activeScreen = screen_config
    if LastKnob = knob_scale
      scale = Round(TranslateScale value, 0, 127, 0, 24)
      PresetScale scale
    elseif LastKnob = knob_root
      rootNote = Round(TranslateScale value, 0, 127, 0, 12)
      SetRootNote rootNote
      Call @UpdateUI
    elseif LastKnob = knob_relativePitch
      relativePitch = Round(TranslateScale value, 0, 127, 0, 1)
      Call @UpdateUI
    elseif LastKnob = knob_minNote
      minNote = Round value
      Call @UpdateUI
    elseif LastKnob = knob_maxNote
      maxNote = Round value
      Call @UpdateUI
    endif
    
    Call @UpdateUI
  endif
@End 

@UpdateUI
  for i = 0 to 21
    LabelKnob i, { }
  endfor
  
  if activeScreen = screen_main
    if direction = 0
      LabelKnob knob_direction, {Dir: Rev}
    elseif direction = 1
      LabelKnob knob_direction, {Dir: Fwd}
    endif
  
    LabelKnob knob_pulse, {Pulse: 1/}, pulseDenom
    LabelKnob knob_steps, {Steps: }, steps
    LabelKnob knob_controlSteps, {C.Steps: }, controlSteps
    LabelKnob knob_offset, {Offset: }, offset

    Call @UpdateStepsUI
  elseif activeScreen = screen_config
    LabelKnob 0, ScaleName
    LabelKnob 1, {Root: }, RootNoteName 
    LabelKnob 2, {Rel: }, relativePitch 
    LabelKnob knob_minNote, {Min: }, minNote
    LabelKnob knob_maxNote, {Max: }, maxNote
  endif
@End

@UpdateStepsUI
  if activeScreen = screen_main
    for i = 0 to 7
      if i < steps
        if i = currentStep
          LabelKnob i, {*Step }, i + 1, {*}
        else
          LabelKnob i, {Step }, i + 1
        endif
      else 
        LabelKnob i, { } 
      endif
    
      if i < controlSteps
        if i = currentControlStep
          LabelKnob i + 11, {*Ctrl }, i + 1, {*}
        else
          LabelKnob i + 11, {Ctrl }, i + 1
        endif
      else
        LabelKnob i + 11, { }
      endif
    endfor 
  endif
@End

@UpdateKnobs
  if activeScreen = screen_main
    for i = 0 to 7
      SetKnobValue i, stepValues[i]
      SetKnobValue (i + 11), controlValues[i]
    endfor
    
    SetKnobValue knob_direction, TranslateScale direction, 0, 1, 0, 127
    SetKnobValue knob_pulse, TranslateScale pulse, 0, 5, 0, 127 
    SetKnobValue knob_offset, TranslateScale offset, 0, 7, 0, 127
    SetKnobValue knob_steps, TranslateScale steps, 1, 8, 0, 127
    SetKnobValue knob_controlSteps, TranslateScale controlSteps, 1, 8, 0, 127
  elseif activeScreen = screen_config
    SetKnobValue knob_scale, TranslateScale scale, 0, 24, 0, 127
    SetKnobValue knob_root, TranslateScale rootNote, 0, 12, 0, 127
    SetKnobValue knob_relativePitch, TranslateScale relativePitch, 0, 1, 0, 127
    SetKnobValue knob_minNote, minNote
    SetKnobValue knob_maxNote, maxNote
  endif
@End

@SwitchScreen
  activeScreen = nextScreen
  Call @UpdateUI
  Call @UpdateKnobs
@End

@UpdateMetronome
  SetMetroPPQN pulseDenom / 4
@End

@OnMetroPulse
  metroPulse = metroPulse + 1
  currentStep = (metroPulse + offset) % steps
  currentControlStep = ((metroPulse + offset) % controlSteps)

  note = TranslateScale stepValues[currentStep], 0, 127, minNote, maxNote

  if relativePitch
    note = rootNote + note
  endif
  
  note = ScaleQuantize (note)
  
  control = controlValues[currentControlStep]
  
  if note > 0
    SendMIDINoteOn 0, note, control, 0
    SendMIDINoteOff 0, note, control, 50
  endif  

  Call @UpdateStepsUI
@End

@OnNewBar
  lastHostBar = HostBar 
@End

@OnNewBeat
  lastHostBeat = HostBeat
@End

@OnShiftDown
  if activeScreen = screen_main
    nextScreen = screen_shift
    Call @SwitchScreen
  endif
@End

@OnShiftUp
  if activeScreen = screen_shift
    nextScreen = screen_main
    Call @SwitchScreen
  endif
      
  if NOT doubleShiftValid   
    doubleShiftValid = True
    SetTimerInterval 500
    StartTimer
  else 
    if activeScreen = screen_main OR activeScreen = screen_shift
      nextScreen = screen_config
      Call @SwitchScreen
    elseif activeScreen = screen_config
      nextScreen = screen_main
      Call @SwitchScreen
    endif
    
    Call @UpdateUI
    doubleShiftValid = False
  endif
@End 

@OnTimer
  doubleShiftValid = False
  StopTimer
@End
